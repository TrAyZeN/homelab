---
- name: deploy
  hosts: server

  tasks:
    - name: Create flame service directory
      file:
        path: "{{ ansible_user_dir }}/flame"
        state: directory
    - name: Copy flame docker-compose file
      copy:
        src: services/flame/docker-compose.yml
        dest: "{{ ansible_user_dir }}/flame/docker-compose.yml"
    - name: Start flame service
      command:
        chdir: "{{ ansible_user_dir }}/flame"
        cmd: docker compose up -d
    - name: Copy flame nginx site
      become: true
      copy:
        src: services/flame/flame.home.nginx
        dest: /etc/nginx/sites-available/flame.home.nginx
        owner: root
        group: root
        mode: '0444'
    - name: Enable flame nginx site
      become: true
      file:
        src: /etc/nginx/sites-available/flame.home.nginx
        dest: /etc/nginx/sites-enabled/flame.home.nginx
        state: link
        owner: root
        group: root
        mode: '0444'

    - name: Create kiwix service directory
      file:
        path: "{{ ansible_user_dir }}/kiwix"
        state: directory
    - name: Copy kiwix docker-compose file
      copy:
        src: services/kiwix/docker-compose.yml
        dest: "{{ ansible_user_dir }}/kiwix/docker-compose.yml"
    - name: Start kiwix service
      command:
        chdir: "{{ ansible_user_dir }}/kiwix"
        cmd: docker compose up -d
    - name: Copy kiwix nginx site
      become: true
      copy:
        src: services/kiwix/kiwix.home.nginx
        dest: /etc/nginx/sites-available/kiwix.home.nginx
        owner: root
        group: root
        mode: '0444'
    - name: Enable kiwix nginx site
      become: true
      file:
        src: /etc/nginx/sites-available/kiwix.home.nginx
        dest: /etc/nginx/sites-enabled/kiwix.home.nginx
        state: link
        owner: root
        group: root
        mode: '0444'

    - name: Create filebrowser service directory
      file:
        path: "{{ ansible_user_dir }}/filebrowser"
        state: directory
    - name: Copy filebrowser docker-compose file
      copy:
        src: services/filebrowser/docker-compose.yml
        dest: "{{ ansible_user_dir }}/filebrowser/docker-compose.yml"
    - name: Create filebrowser.db
      file:
        path: "{{ ansible_user_dir }}/filebrowser/filebrowser.db"
        state: touch
    - name: Copy filebrowser json configuration file
      copy:
        src: services/filebrowser/.filebrowser.json
        dest: "{{ ansible_user_dir }}/filebrowser/.filebrowser.json"
    - name: Start filebrowser service
      command:
        chdir: "{{ ansible_user_dir }}/filebrowser"
        cmd: docker compose up -d
    - name: Copy filebrowser nginx site
      become: true
      copy:
        src: services/filebrowser/filebrowser.home.nginx
        dest: /etc/nginx/sites-available/filebrowser.home.nginx
        owner: root
        group: root
        mode: '0444'
    - name: Enable filebrowser nginx site
      become: true
      file:
        src: /etc/nginx/sites-available/filebrowser.home.nginx
        dest: /etc/nginx/sites-enabled/filebrowser.home.nginx
        state: link
        owner: root
        group: root
        mode: '0444'

    - name: Create archivebox service directory
      file:
        path: "{{ ansible_user_dir }}/archivebox"
        state: directory
    - name: Copy archivebox docker-compose file
      copy:
        src: services/archivebox/docker-compose.yml
        dest: "{{ ansible_user_dir }}/archivebox/docker-compose.yml"
    - name: Start archivebox service
      command:
        chdir: "{{ ansible_user_dir }}/archivebox"
        cmd: docker compose up -d
    - name: Copy archivebox nginx site
      become: true
      copy:
        src: services/archivebox/archivebox.home.nginx
        dest: /etc/nginx/sites-available/archivebox.home.nginx
        owner: root
        group: root
        mode: '0444'
    - name: Enable archivebox nginx site
      become: true
      file:
        src: /etc/nginx/sites-available/archivebox.home.nginx
        dest: /etc/nginx/sites-enabled/archivebox.home.nginx
        state: link
        owner: root
        group: root
        mode: '0444'

    - name: Create wallabag service directory
      file:
        path: "{{ ansible_user_dir }}/wallabag"
        state: directory
    - name: Copy wallabag docker-compose file
      copy:
        src: services/wallabag/docker-compose.yml
        dest: "{{ ansible_user_dir }}/wallabag/docker-compose.yml"
    - name: Start wallabag service
      command:
        chdir: "{{ ansible_user_dir }}/wallabag"
        cmd: docker compose up -d

    - name: Create gitea service directory
      file:
        path: "{{ ansible_user_dir }}/gitea"
        state: directory
    - name: Copy gitea docker-compose file
      copy:
        src: services/gitea/docker-compose.yml
        dest: "{{ ansible_user_dir }}/gitea/docker-compose.yml"
    - name: Copy app.ini file
      copy:
        src: services/gitea/app.ini
        dest: "{{ ansible_user_dir }}/gitea/app.ini"
    - name: Start gitea service
      command:
        chdir: "{{ ansible_user_dir }}/gitea"
        cmd: docker compose up -d
    - name: Copy gitea nginx site
      become: true
      copy:
        src: services/gitea/gitea.home.nginx
        dest: /etc/nginx/sites-available/gitea.home.nginx
        owner: root
        group: root
        mode: '0444'
    - name: Enable gitea nginx site
      become: true
      file:
        src: /etc/nginx/sites-available/gitea.home.nginx
        dest: /etc/nginx/sites-enabled/gitea.home.nginx
        state: link
        owner: root
        group: root
        mode: '0444'

    - name: Create grafana service directory
      file:
        path: "{{ ansible_user_dir }}/grafana"
        state: directory
    - name: Copy grafana docker-compose file
      copy:
        src: services/grafana/docker-compose.yml
        dest: "{{ ansible_user_dir }}/grafana/docker-compose.yml"
    - name: Copy prometheus configuration file
      copy:
        src: services/grafana/prometheus.yml
        dest: "{{ ansible_user_dir }}/grafana/prometheus.yml"
    - name: Start grafana service
      command:
        chdir: "{{ ansible_user_dir }}/grafana"
        cmd: docker compose up -d
    - name: Copy grafana nginx site
      become: true
      copy:
        src: services/grafana/grafana.home.nginx
        dest: /etc/nginx/sites-available/grafana.home.nginx
        owner: root
        group: root
        mode: '0444'
    - name: Enable grafana nginx site
      become: true
      file:
        src: /etc/nginx/sites-available/grafana.home.nginx
        dest: /etc/nginx/sites-enabled/grafana.home.nginx
        state: link
        owner: root
        group: root
        mode: '0444'

    - name: Create vaultwarden service directory
      file:
        path: "{{ ansible_user_dir }}/vaultwarden"
        state: directory
    - name: Copy vaultwarden docker-compose file
      copy:
        src: services/vaultwarden/docker-compose.yml
        dest: "{{ ansible_user_dir }}/vaultwarden/docker-compose.yml"
    - name: Start vaultwarden service
      command:
        chdir: "{{ ansible_user_dir }}/vaultwarden"
        cmd: docker compose up -d
    - name: Copy vaultwarden nginx site
      become: true
      copy:
        src: services/vaultwarden/vaultwarden.home.nginx
        dest: /etc/nginx/sites-available/vaultwarden.home.nginx
        owner: root
        group: root
        mode: '0444'
    - name: Enable vaultwarden nginx site
      become: true
      file:
        src: /etc/nginx/sites-available/vaultwarden.home.nginx
        dest: /etc/nginx/sites-enabled/vaultwarden.home.nginx
        state: link
        owner: root
        group: root
        mode: '0444'

    - name: Enable and restart nginx
      become: true
      service:
        name: nginx
        enabled: true
        state: restarted

    # - name: Install Caddy
      # become: true
      # shell:
        # cmd: |
          # apt install -y debian-keyring debian-archive-keyring apt-transport-https &&
          # curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | gpg --dearmor --yes -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg &&
          # curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list &&
          # apt update &&
          # apt install caddy
    # - name: Copy Caddyfile
      # copy:
        # src: Caddyfile
        # dest: "{{ ansible_user_dir }}/Caddyfile"
    # - name: Start caddy
      # become: true
      # command:
        # cmd: caddy reload
